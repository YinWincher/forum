// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PublishArea ui render render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostList
    discussion={
        Object {
            "author": "test",
            "postid": 1,
            "title": "test",
          }
    }
    onSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Link
        replace={false}
        to="/discussion/1"
>
        <div
                className="head"
                data-postid={1}
                onClick={[Function]}
        >
                <span
                        className="title"
                >
                        test
                </span>
                <span
                        className="author"
                >
                        test
                </span>
        </div>
</Link>,
      "className": "border border-3 postlist-wrapper",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="head"
          data-postid={1}
          onClick={[Function]}
>
          <span
                    className="title"
          >
                    test
          </span>
          <span
                    className="author"
          >
                    test
          </span>
</div>,
        "replace": false,
        "to": "/discussion/1",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="title"
>
              test
</span>,
            <span
              className="author"
>
              test
</span>,
          ],
          "className": "head",
          "data-postid": 1,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "test",
              "className": "title",
            },
            "ref": null,
            "rendered": "test",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "test",
              "className": "author",
            },
            "ref": null,
            "rendered": "test",
            "type": "span",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Link
          replace={false}
          to="/discussion/1"
>
          <div
                    className="head"
                    data-postid={1}
                    onClick={[Function]}
          >
                    <span
                              className="title"
                    >
                              test
                    </span>
                    <span
                              className="author"
                    >
                              test
                    </span>
          </div>
</Link>,
        "className": "border border-3 postlist-wrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            className="head"
            data-postid={1}
            onClick={[Function]}
>
            <span
                        className="title"
            >
                        test
            </span>
            <span
                        className="author"
            >
                        test
            </span>
</div>,
          "replace": false,
          "to": "/discussion/1",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="title"
>
                test
</span>,
              <span
                className="author"
>
                test
</span>,
            ],
            "className": "head",
            "data-postid": 1,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
                "className": "title",
              },
              "ref": null,
              "rendered": "test",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
                "className": "author",
              },
              "ref": null,
              "rendered": "test",
              "type": "span",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
